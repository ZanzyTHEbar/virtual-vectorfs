name: LibSQL Build & Artifacts

on:
  push:
    branches: [main, develop]
    paths:
      - 'build/**'
      - 'Makefile'
      - '.github/workflows/libsql-build.yml'
  pull_request:
    branches: [main]
    paths:
      - 'build/**'
      - 'Makefile'
  workflow_dispatch:
    inputs:
      architecture:
        description: 'Architecture to build'
        required: true
        default: 'both'
        type: choice
        options:
          - amd64
          - arm64
          - both

env:
  LIBSQL_VERSION: v0.9.23
  LIBSQL_COMMIT: 7eed898

jobs:
  build-amd64:
    name: Build LibSQL AMD64
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.architecture == 'amd64' || github.event.inputs.architecture == 'both'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build LibSQL AMD64
        run: make build-libsql-amd64-full
      
      - name: Validate artifacts
        run: make validate-artifacts
      
      - name: List artifacts
        run: |
          echo "=== AMD64 Build Artifacts ==="
          ls -lah build/artifacts/amd64/
          echo "=== SQLean Extensions ==="
          ls -lah build/artifacts/amd64/sqlean/
          echo "=== Build Info ==="
          cat build/artifacts/amd64/build-info.txt
      
      - name: Upload AMD64 artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libsql-amd64-${{ env.LIBSQL_COMMIT }}
          path: |
            build/artifacts/amd64/*.h
            build/artifacts/amd64/*.txt
            build/artifacts/amd64/sqlean/*.so
          retention-days: 30
          if-no-files-found: error

  build-arm64:
    name: Build LibSQL ARM64
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.architecture == 'arm64' || github.event.inputs.architecture == 'both'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build LibSQL ARM64
        run: make build-libsql-arm64-full
      
      - name: List artifacts
        run: |
          echo "=== ARM64 Build Artifacts ==="
          ls -lah build/artifacts/arm64/ || echo "No artifacts found"
      
      - name: Upload ARM64 artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libsql-arm64-${{ env.LIBSQL_COMMIT }}
          path: |
            build/artifacts/arm64/*.h
            build/artifacts/arm64/*.txt
            build/artifacts/arm64/sqlean/*.so
          retention-days: 30
          if-no-files-found: warn

  smoke-test:
    name: Smoke Test
    runs-on: ubuntu-latest
    needs: [build-amd64]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
      
      - name: Download AMD64 artifacts
        uses: actions/download-artifact@v4
        with:
          name: libsql-amd64-${{ env.LIBSQL_COMMIT }}
          path: build/artifacts/amd64/
      
      - name: Run smoke tests
        run: |
          go run scripts/smoke_libsql.go || echo "Smoke test script not yet implemented"
      
      - name: Run Go tests
        run: |
          go test ./vvfs/db/... -v -run TestLibSQL || echo "Tests not yet available"

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64]
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Download AMD64 artifacts
        uses: actions/download-artifact@v4
        with:
          name: libsql-amd64-${{ env.LIBSQL_COMMIT }}
          path: release/amd64/
      
      - name: Download ARM64 artifacts
        uses: actions/download-artifact@v4
        with:
          name: libsql-arm64-${{ env.LIBSQL_COMMIT }}
          path: release/arm64/
      
      - name: Create release archive
        run: |
          cd release
          tar czf libsql-artifacts-amd64-${{ env.LIBSQL_COMMIT }}.tar.gz amd64/
          tar czf libsql-artifacts-arm64-${{ env.LIBSQL_COMMIT }}.tar.gz arm64/
          ls -lah *.tar.gz
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/*.tar.gz
          body: |
            LibSQL Build Artifacts
            
            **Version:** ${{ env.LIBSQL_VERSION }}
            **Commit:** ${{ env.LIBSQL_COMMIT }}
            
            Includes:
            - LibSQL C header (libsql.h)
            - SQLean extensions (.so files)
            - Build metadata
            
            Architectures:
            - linux/amd64
            - linux/arm64
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

